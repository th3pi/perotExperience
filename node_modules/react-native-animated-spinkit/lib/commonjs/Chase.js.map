{"version":3,"sources":["Chase.tsx"],"names":["Chase","props","size","color","style","animating","hidesWhenStopped","rest","circleStyle","position","width","height","backgroundColor","borderRadius","chase","value","values","animation","duration","easing","Easing","linear","chaseDot","keyframes","chaseDotBefore","alignItems","justifyContent","opacity","transform","rotate","interpolate","inputRange","outputRange","map","index","translateY","scale","React","Component","defaultProps"],"mappings":"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","sourcesContent":["import * as React from 'react'\nimport { Animated, Easing } from 'react-native'\nimport { SpinnerProps, defaultProps } from './SpinnerProps'\nimport AnimationContainer from './AnimationContainer'\nimport { anim, stagger } from './utils'\n\nexport default class Chase extends React.Component<SpinnerProps> {\n  static defaultProps = defaultProps\n\n  render() {\n    const {\n      size,\n      color,\n      style,\n      animating,\n      hidesWhenStopped,\n      ...rest\n    } = this.props\n    const circleStyle = {\n      position: 'absolute',\n      width: size / 4,\n      height: size / 4,\n      backgroundColor: color,\n      borderRadius: size / 8,\n    }\n\n    return (\n      <AnimationContainer<'chase' | 'chaseDot' | 'chaseDotBefore'>\n        initAnimation={() => ({\n          chase: (value) => ({\n            values: [value],\n            animation: anim({\n              duration: 2500,\n              easing: Easing.linear,\n              value: value,\n            }),\n          }),\n          chaseDot: (value) =>\n            stagger(100, 6, {\n              duration: 2000,\n              value: value,\n              keyframes: [0, 80, 100],\n            }),\n          chaseDotBefore: (value) =>\n            stagger(100, 6, {\n              duration: 2000,\n              value: value,\n              keyframes: [0, 50, 100],\n            }),\n        })}\n        animating={animating}\n      >\n        {(values) => (\n          <Animated.View\n            style={[\n              {\n                width: size,\n                height: size,\n                alignItems: 'center',\n                justifyContent: 'center',\n                opacity: !animating && hidesWhenStopped ? 0 : 1,\n                transform: [\n                  {\n                    rotate: values.chase[0].interpolate({\n                      inputRange: [0, 100],\n                      outputRange: ['0deg', '360deg'],\n                    }),\n                  },\n                ],\n              },\n              style,\n            ]}\n            {...rest}\n          >\n            {values.chaseDot.map((value, index) => (\n              <Animated.View\n                key={index}\n                style={[\n                  circleStyle,\n                  {\n                    transform: [\n                      {\n                        rotate: value.interpolate({\n                          inputRange: [0, 80, 100],\n                          outputRange: ['0deg', '360deg', '360deg'],\n                        }),\n                      },\n                      { translateY: -size / 2 + size / 8 },\n                      {\n                        scale: values.chaseDotBefore[index].interpolate({\n                          inputRange: [0, 50, 100],\n                          outputRange: [1, 0.4, 1],\n                        }),\n                      },\n                    ],\n                  },\n                ]}\n              />\n            ))}\n          </Animated.View>\n        )}\n      </AnimationContainer>\n    )\n  }\n}\n"]}