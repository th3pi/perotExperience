{"version":3,"sources":["utils.ts"],"names":["createKeyframeEasingFunction","keyframes","easing","t","keyframeIndex","length","prev","current","anim","duration","value","Easing","bezier","toValue","infinite","delay","timing","Animated","useNativeDriver","loop","stagger","time","amount","animationConfig","easingFunction","animation","frameDuration","inputRange","numFrames","Math","round","frame","push","values","index","delayedFrames","outputRange","slice","concat","interpolate"],"mappings":"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","sourcesContent":["import { EasingFunction, Easing, Animated } from 'react-native'\n\nexport function createKeyframeEasingFunction(\n  keyframes: number[],\n  easing: EasingFunction\n) {\n  return (t: number) => {\n    for (\n      let keyframeIndex = 1;\n      keyframeIndex < keyframes.length;\n      keyframeIndex++\n    ) {\n      if (t < keyframes[keyframeIndex] / 100) {\n        const prev = keyframes[keyframeIndex - 1] / 100\n        const current =\n          (keyframes[keyframeIndex] - keyframes[keyframeIndex - 1]) / 100\n\n        return prev + easing((t - prev) / current) * current\n      }\n    }\n    return t\n  }\n}\n\nexport interface AnimationConfig {\n  duration: number\n  value: Animated.Value\n  keyframes?: number[]\n  toValue?: number\n  easing?: EasingFunction\n  infinite?: boolean\n  delay?: number\n}\n\nexport function anim({\n  duration,\n  value,\n  keyframes = [0, 100],\n  easing = Easing.bezier(0.42, 0.0, 0.58, 1.0),\n  toValue = 100,\n  infinite = true,\n  delay = 0,\n}: AnimationConfig) {\n  const timing = Animated.timing(value, {\n    duration: duration,\n    easing: createKeyframeEasingFunction(keyframes, easing),\n    toValue: toValue,\n    useNativeDriver: true,\n    delay: delay,\n  })\n  return infinite ? Animated.loop(timing) : timing\n}\n\nexport function stagger(\n  time: number,\n  amount: number,\n  animationConfig: AnimationConfig\n) {\n  const {\n    duration,\n    value,\n    keyframes = [0, 100],\n    easing = Easing.bezier(0.42, 0.0, 0.58, 1.0),\n    toValue = 100,\n    infinite = true,\n    delay = 0,\n  } = animationConfig\n  const easingFunction = createKeyframeEasingFunction(keyframes, easing)\n  const timing = Animated.timing(value, {\n    duration: duration,\n    easing: easingFunction,\n    toValue: toValue,\n    useNativeDriver: true,\n    delay: delay,\n  })\n\n  const animation = infinite ? Animated.loop(timing) : timing\n\n  // React Native only does 60fps\n  // https://github.com/facebook/react-native/blob/d3980dceab90b118cc7f69696967aa7f8d4388d9/Libraries/Animated/src/animations/TimingAnimation.js#L78\n  const frameDuration = 1000.0 / 60.0\n  const inputRange: number[] = []\n  const numFrames = Math.round(animationConfig.duration / frameDuration)\n\n  for (let frame = 0; frame < numFrames; frame++) {\n    inputRange.push(easingFunction(frame / numFrames) * 100)\n  }\n\n  const values = []\n  for (let index = amount - 1; index >= 0; index--) {\n    const delayedFrames = Math.round(\n      ((index * time) / animationConfig.duration) * numFrames\n    )\n    const outputRange = inputRange\n      .slice(delayedFrames)\n      .concat(inputRange.slice(0, delayedFrames))\n\n    const value =\n      index === 0\n        ? animationConfig.value\n        : animationConfig.value.interpolate({ inputRange, outputRange })\n    values.push(value)\n  }\n\n  return { animation, values }\n}\n"]}