{"version":3,"sources":["Wander.tsx"],"names":["Wander","props","size","color","style","animating","hidesWhenStopped","rest","wanderDistance","wander","value","values","animation","duration","keyframes","width","height","opacity","Array","fill","map","_","index","position","transform","rotate","backgroundColor","translateX","interpolate","inputRange","outputRange","translateY","scale","React","Component","defaultProps"],"mappings":"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","sourcesContent":["import * as React from 'react'\nimport { Animated, View } from 'react-native'\nimport { SpinnerProps, defaultProps } from './SpinnerProps'\nimport AnimationContainer from './AnimationContainer'\nimport { anim } from './utils'\n\nexport default class Wander extends React.Component<SpinnerProps> {\n  static defaultProps = defaultProps\n\n  render() {\n    const {\n      size,\n      color,\n      style,\n      animating,\n      hidesWhenStopped,\n      ...rest\n    } = this.props\n    const wanderDistance = size * 0.75\n\n    return (\n      <AnimationContainer<'wander'>\n        initAnimation={() => ({\n          wander: (value) => ({\n            values: [value],\n            animation: anim({\n              duration: 2000,\n              value: value,\n              keyframes: [0, 25, 50, 75, 100],\n            }),\n          }),\n        })}\n        animating={animating}\n      >\n        {(values) => (\n          <View\n            style={[\n              {\n                width: size,\n                height: size,\n                opacity: !animating && hidesWhenStopped ? 0 : 1,\n              },\n              style,\n            ]}\n            {...rest}\n          >\n            {Array(3)\n              .fill(null)\n              .map((_, index) => (\n                <View\n                  key={index}\n                  style={{\n                    width: size,\n                    height: size,\n                    position: 'absolute',\n                    transform: [\n                      {\n                        rotate: `${index * 90}deg`,\n                      },\n                    ],\n                  }}\n                >\n                  <Animated.View\n                    style={{\n                      width: size / 5,\n                      height: size / 5,\n                      backgroundColor: color,\n                      position: 'absolute',\n                      transform: [\n                        {\n                          translateX: values.wander[0].interpolate({\n                            inputRange: [0, 25, 50, 75, 100],\n                            outputRange: [\n                              0,\n                              wanderDistance,\n                              wanderDistance,\n                              0,\n                              0,\n                            ],\n                          }),\n                        },\n                        {\n                          translateY: values.wander[0].interpolate({\n                            inputRange: [0, 25, 50, 75, 100],\n                            outputRange: [\n                              0,\n                              0,\n                              wanderDistance,\n                              wanderDistance,\n                              0,\n                            ],\n                          }),\n                        },\n                        {\n                          scale: values.wander[0].interpolate({\n                            inputRange: [0, 25, 50, 75, 100],\n                            outputRange:\n                              index % 2 === 0\n                                ? [1, 0.6, 1, 0.6, 1]\n                                : [0.6, 1, 0.6, 1, 0.6],\n                          }),\n                        },\n                        {\n                          rotate: values.wander[0].interpolate({\n                            inputRange: [0, 25, 50, 75, 100],\n                            outputRange: [\n                              '0deg',\n                              '-90deg',\n                              '-180deg',\n                              '-270deg',\n                              '-360deg',\n                            ],\n                          }),\n                        },\n                      ],\n                    }}\n                  />\n                </View>\n              ))}\n          </View>\n        )}\n      </AnimationContainer>\n    )\n  }\n}\n"]}