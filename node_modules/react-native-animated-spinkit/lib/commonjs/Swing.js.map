{"version":3,"sources":["Swing.tsx"],"names":["Swing","props","size","color","style","animating","hidesWhenStopped","rest","circleStyle","width","height","backgroundColor","borderRadius","swing","value","values","animation","duration","easing","Easing","linear","keyframes","swingDot","alignItems","justifyContent","opacity","transform","rotate","interpolate","inputRange","outputRange","scale","React","Component","defaultProps"],"mappings":"k5BAAA,oDACA,yCACA,4CACA,gFACA,8B,uFAEqBA,CAAAA,K,0TAGV,iBAQH,KAAKC,KARF,CAELC,IAFK,aAELA,IAFK,CAGLC,KAHK,aAGLA,KAHK,CAILC,KAJK,aAILA,KAJK,CAKLC,SALK,aAKLA,SALK,CAMLC,gBANK,aAMLA,gBANK,CAOFC,IAPE,4GASP,GAAMC,CAAAA,WAAW,CAAG,CAClBC,KAAK,CAAEP,IAAI,CAAG,IADI,CAElBQ,MAAM,CAAER,IAAI,CAAG,IAFG,CAGlBS,eAAe,CAAER,KAHC,CAIlBS,YAAY,CAAGV,IAAI,CAAG,IAAR,CAAgB,CAJZ,CAApB,CAOA,MACE,qBAAC,2BAAD,EACE,aAAa,CAAE,+BAAO,CACpBW,KAAK,CAAE,eAACC,KAAD,QAAY,CACjBC,MAAM,CAAE,CAACD,KAAD,CADS,CAEjBE,SAAS,CAAE,gBAAK,CACdC,QAAQ,CAAE,IADI,CAEdH,KAAK,CAAEA,KAFO,CAGdI,MAAM,CAAEC,oBAAOC,MAHD,CAIdC,SAAS,CAAE,CAAC,CAAD,CAAI,GAAJ,CAJG,CAAL,CAFM,CAAZ,EADa,CAUpBC,QAAQ,CAAE,kBAACR,KAAD,QAAY,CACpBC,MAAM,CAAE,CAACD,KAAD,CADY,CAEpBE,SAAS,CAAE,gBAAK,CACdC,QAAQ,CAAE,IADI,CAEdH,KAAK,CAAEA,KAFO,CAGdO,SAAS,CAAE,CAAC,CAAD,CAAI,EAAJ,CAAQ,GAAR,CAHG,CAAL,CAFS,CAAZ,EAVU,CAAP,EADjB,CAoBE,SAAS,CAAEhB,SApBb,iDAsBG,SAACU,MAAD,QACC,qBAAC,qBAAD,CAAU,IAAV,wBACE,KAAK,CAAE,CACL,CACEN,KAAK,CAAEP,IADT,CAEEQ,MAAM,CAAER,IAFV,CAGEqB,UAAU,CAAE,QAHd,CAIEC,cAAc,CAAE,eAJlB,CAKEC,OAAO,CAAE,CAACpB,SAAD,EAAcC,gBAAd,CAAiC,CAAjC,CAAqC,CALhD,CAMEoB,SAAS,CAAE,CACT,CACEC,MAAM,CAAEZ,MAAM,CAACF,KAAP,CAAa,CAAb,EAAgBe,WAAhB,CAA4B,CAClCC,UAAU,CAAE,CAAC,CAAD,CAAI,GAAJ,CADsB,CAElCC,WAAW,CAAE,CAAC,MAAD,CAAS,QAAT,CAFqB,CAA5B,CADV,CADS,CANb,CADK,CAgBL1B,KAhBK,CADT,EAmBMG,IAnBN,mDAqBE,oBAAC,qBAAD,CAAU,IAAV,EACE,KAAK,CAAE,CACLC,WADK,CAEL,CACEkB,SAAS,CAAE,CACT,CACEK,KAAK,CAAEhB,MAAM,CAACO,QAAP,CAAgB,CAAhB,EAAmBM,WAAnB,CAA+B,CACpCC,UAAU,CAAE,CAAC,CAAD,CAAI,EAAJ,CAAQ,GAAR,CADwB,CAEpCC,WAAW,CAAE,CAAC,GAAD,CAAM,CAAN,CAAS,GAAT,CAFuB,CAA/B,CADT,CADS,CADb,CAFK,CADT,iDArBF,CAoCE,oBAAC,qBAAD,CAAU,IAAV,EACE,KAAK,CAAE,CACLtB,WADK,CAEL,CACEkB,SAAS,CAAE,CACT,CACEK,KAAK,CAAEhB,MAAM,CAACO,QAAP,CAAgB,CAAhB,EAAmBM,WAAnB,CAA+B,CACpCC,UAAU,CAAE,CAAC,CAAD,CAAI,EAAJ,CAAQ,GAAR,CADwB,CAEpCC,WAAW,CAAE,CAAC,CAAD,CAAI,GAAJ,CAAS,CAAT,CAFuB,CAA/B,CADT,CADS,CADb,CAFK,CADT,iDApCF,CADD,EAtBH,CADF,CA+ED,C,mBAlGgCE,KAAK,CAACC,S,wBAApBjC,K,CACZkC,Y,CAAeA,0B","sourcesContent":["import * as React from 'react'\nimport { Animated, Easing } from 'react-native'\nimport { SpinnerProps, defaultProps } from './SpinnerProps'\nimport AnimationContainer from './AnimationContainer'\nimport { anim } from './utils'\n\nexport default class Swing extends React.Component<SpinnerProps> {\n  static defaultProps = defaultProps\n\n  render() {\n    const {\n      size,\n      color,\n      style,\n      animating,\n      hidesWhenStopped,\n      ...rest\n    } = this.props\n    const circleStyle = {\n      width: size * 0.45,\n      height: size * 0.45,\n      backgroundColor: color,\n      borderRadius: (size * 0.45) / 2,\n    }\n\n    return (\n      <AnimationContainer<'swing' | 'swingDot'>\n        initAnimation={() => ({\n          swing: (value) => ({\n            values: [value],\n            animation: anim({\n              duration: 1800,\n              value: value,\n              easing: Easing.linear,\n              keyframes: [0, 100],\n            }),\n          }),\n          swingDot: (value) => ({\n            values: [value],\n            animation: anim({\n              duration: 2000,\n              value: value,\n              keyframes: [0, 50, 100],\n            }),\n          }),\n        })}\n        animating={animating}\n      >\n        {(values) => (\n          <Animated.View\n            style={[\n              {\n                width: size,\n                height: size,\n                alignItems: 'center',\n                justifyContent: 'space-between',\n                opacity: !animating && hidesWhenStopped ? 0 : 1,\n                transform: [\n                  {\n                    rotate: values.swing[0].interpolate({\n                      inputRange: [0, 100],\n                      outputRange: ['0deg', '360deg'],\n                    }),\n                  },\n                ],\n              },\n              style,\n            ]}\n            {...rest}\n          >\n            <Animated.View\n              style={[\n                circleStyle,\n                {\n                  transform: [\n                    {\n                      scale: values.swingDot[0].interpolate({\n                        inputRange: [0, 50, 100],\n                        outputRange: [0.2, 1, 0.2],\n                      }),\n                    },\n                  ],\n                },\n              ]}\n            />\n            <Animated.View\n              style={[\n                circleStyle,\n                {\n                  transform: [\n                    {\n                      scale: values.swingDot[0].interpolate({\n                        inputRange: [0, 50, 100],\n                        outputRange: [1, 0.2, 1],\n                      }),\n                    },\n                  ],\n                },\n              ]}\n            />\n          </Animated.View>\n        )}\n      </AnimationContainer>\n    )\n  }\n}\n"]}