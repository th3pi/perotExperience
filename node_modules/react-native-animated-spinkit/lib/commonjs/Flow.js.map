{"version":3,"sources":["Flow.tsx"],"names":["Flow","props","size","color","style","animating","hidesWhenStopped","rest","flow","value","duration","easing","Easing","bezier","keyframes","values","width","height","justifyContent","flexDirection","opacity","map","index","borderRadius","backgroundColor","transform","scale","interpolate","inputRange","outputRange","React","Component","defaultProps"],"mappings":"k5BAAA,oDACA,yCACA,4CACA,gFACA,8B,sFAEqBA,CAAAA,I,qTAGV,iBAQH,KAAKC,KARF,CAELC,IAFK,aAELA,IAFK,CAGLC,KAHK,aAGLA,KAHK,CAILC,KAJK,aAILA,KAJK,CAKLC,SALK,aAKLA,SALK,CAMLC,gBANK,aAMLA,gBANK,CAOFC,IAPE,4GAUP,MACE,qBAAC,2BAAD,EACE,aAAa,CAAE,+BAAO,CACpBC,IAAI,CAAE,cAACC,KAAD,QACJ,mBAAQ,GAAR,CAAa,CAAb,CAAgB,CACdC,QAAQ,CAAE,IADI,CAEdD,KAAK,CAAEA,KAFO,CAGdE,MAAM,CAAEC,oBAAOC,MAAP,CAAc,KAAd,CAAqB,IAArB,CAA2B,KAA3B,CAAkC,KAAlC,CAHM,CAIdC,SAAS,CAAE,CAAC,CAAD,CAAI,EAAJ,CAAQ,EAAR,CAAY,GAAZ,CAJG,CAAhB,CADI,EADc,CAAP,EADjB,CAUE,SAAS,CAAET,SAVb,iDAYG,SAACU,MAAD,QACC,qBAAC,iBAAD,wBACE,KAAK,CAAE,CACL,CACEC,KAAK,CAAEd,IADT,CAEEe,MAAM,CAAEf,IAAI,CAAG,IAFjB,CAGEgB,cAAc,CAAE,eAHlB,CAIEC,aAAa,CAAE,KAJjB,CAKEC,OAAO,CAAE,CAACf,SAAD,EAAcC,gBAAd,CAAiC,CAAjC,CAAqC,CALhD,CADK,CAQLF,KARK,CADT,EAWMG,IAXN,mDAaGQ,MAAM,CAACP,IAAP,CAAYa,GAAZ,CAAgB,SAACZ,KAAD,CAAQa,KAAR,QACf,qBAAC,qBAAD,CAAU,IAAV,EACE,GAAG,CAAEA,KADP,CAEE,KAAK,CAAE,CACLN,KAAK,CAAEd,IAAI,CAAG,IADT,CAELe,MAAM,CAAEf,IAAI,CAAG,IAFV,CAGLqB,YAAY,CAAGrB,IAAI,CAAG,IAAR,CAAgB,CAHzB,CAILsB,eAAe,CAAErB,KAJZ,CAKLsB,SAAS,CAAE,CACT,CACEC,KAAK,CAAEjB,KAAK,CAACkB,WAAN,CAAkB,CACvBC,UAAU,CAAE,CAAC,CAAD,CAAI,EAAJ,CAAQ,EAAR,CAAY,GAAZ,CADW,CAEvBC,WAAW,CAAE,CAAC,GAAD,CAAM,CAAN,CAAS,GAAT,CAAc,GAAd,CAFU,CAAlB,CADT,CADS,CALN,CAFT,iDADe,EAAhB,CAbH,CADD,EAZH,CADF,CAkDD,C,kBA/D+BC,KAAK,CAACC,S,uBAAnB/B,I,CACZgC,Y,CAAeA,0B","sourcesContent":["import * as React from 'react'\nimport { Animated, Easing, View } from 'react-native'\nimport { SpinnerProps, defaultProps } from './SpinnerProps'\nimport AnimationContainer from './AnimationContainer'\nimport { stagger } from './utils'\n\nexport default class Flow extends React.Component<SpinnerProps> {\n  static defaultProps = defaultProps\n\n  render() {\n    const {\n      size,\n      color,\n      style,\n      animating,\n      hidesWhenStopped,\n      ...rest\n    } = this.props\n\n    return (\n      <AnimationContainer<'flow'>\n        initAnimation={() => ({\n          flow: (value) =>\n            stagger(150, 3, {\n              duration: 1400,\n              value: value,\n              easing: Easing.bezier(0.455, 0.03, 0.515, 0.955),\n              keyframes: [0, 40, 80, 100],\n            }),\n        })}\n        animating={animating}\n      >\n        {(values) => (\n          <View\n            style={[\n              {\n                width: size,\n                height: size * 0.25,\n                justifyContent: 'space-between',\n                flexDirection: 'row',\n                opacity: !animating && hidesWhenStopped ? 0 : 1,\n              },\n              style,\n            ]}\n            {...rest}\n          >\n            {values.flow.map((value, index) => (\n              <Animated.View\n                key={index}\n                style={{\n                  width: size * 0.25,\n                  height: size * 0.25,\n                  borderRadius: (size * 0.25) / 2,\n                  backgroundColor: color,\n                  transform: [\n                    {\n                      scale: value.interpolate({\n                        inputRange: [0, 40, 80, 100],\n                        outputRange: [0.3, 1, 0.3, 0.3],\n                      }),\n                    },\n                  ],\n                }}\n              />\n            ))}\n          </View>\n        )}\n      </AnimationContainer>\n    )\n  }\n}\n"]}