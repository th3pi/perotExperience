import _classCallCheck from"@babel/runtime/helpers/classCallCheck";import _createClass from"@babel/runtime/helpers/createClass";import _possibleConstructorReturn from"@babel/runtime/helpers/possibleConstructorReturn";import _getPrototypeOf from"@babel/runtime/helpers/getPrototypeOf";import _inherits from"@babel/runtime/helpers/inherits";import*as React from'react';import{Animated}from'react-native';var AnimationContainer=function(_React$Component){_inherits(AnimationContainer,_React$Component);function AnimationContainer(props){var _this;_classCallCheck(this,AnimationContainer);_this=_possibleConstructorReturn(this,_getPrototypeOf(AnimationContainer).call(this,props));_this.animatedValuesByKey={};_this.interpolationsByKey={};_this.startAnimation=function(){_this.animation.start();};_this.stopAnimation=function(){_this.animation.stop();for(var key in _this.animatedValuesByKey){_this.animatedValuesByKey[key].setValue(0);}};var initAnimation=props.initAnimation;var animationInitializersByKey=initAnimation();var animations=[];for(var key in animationInitializersByKey){var animationInitializer=animationInitializersByKey[key];var animationValue=new Animated.Value(0);_this.animatedValuesByKey[key]=animationValue;var _animationInitializer=animationInitializer(animationValue),animation=_animationInitializer.animation,values=_animationInitializer.values;animations.push(animation);_this.interpolationsByKey[key]=values;}if(animations.length===1){_this.animation=animations[0];}else{_this.animation=Animated.parallel(animations);}return _this;}_createClass(AnimationContainer,[{key:"componentDidMount",value:function componentDidMount(){this.startAnimation();}},{key:"componentDidUpdate",value:function componentDidUpdate(prevProps){var animating=this.props.animating;if(animating!==prevProps.animating){if(animating){this.startAnimation();}else{this.stopAnimation();}}}},{key:"componentWillUnmount",value:function componentWillUnmount(){this.animation.stop();}},{key:"render",value:function render(){var children=this.props.children;return children?children(this.interpolationsByKey):null;}}]);return AnimationContainer;}(React.Component);AnimationContainer.defaultProps={animating:true};export{AnimationContainer as default};
//# sourceMappingURL=AnimationContainer.js.map