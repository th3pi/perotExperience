{"version":3,"sources":["Flow.tsx"],"names":["React","Animated","Easing","View","defaultProps","AnimationContainer","stagger","Flow","props","size","color","style","animating","hidesWhenStopped","rest","flow","value","duration","easing","bezier","keyframes","values","width","height","justifyContent","flexDirection","opacity","map","index","borderRadius","backgroundColor","transform","scale","interpolate","inputRange","outputRange","Component"],"mappings":"gjBAAA,MAAO,GAAKA,CAAAA,KAAZ,KAAuB,OAAvB,CACA,OAASC,QAAT,CAAmBC,MAAnB,CAA2BC,IAA3B,KAAuC,cAAvC,CACA,OAAuBC,YAAvB,KAA2C,gBAA3C,CACA,MAAOC,CAAAA,kBAAP,KAA+B,sBAA/B,CACA,OAASC,OAAT,KAAwB,SAAxB,C,GAEqBC,CAAAA,I,qPAGV,iBAQH,KAAKC,KARF,CAELC,IAFK,aAELA,IAFK,CAGLC,KAHK,aAGLA,KAHK,CAILC,KAJK,aAILA,KAJK,CAKLC,SALK,aAKLA,SALK,CAMLC,gBANK,aAMLA,gBANK,CAOFC,IAPE,+FAUP,MACE,qBAAC,kBAAD,EACE,aAAa,CAAE,+BAAO,CACpBC,IAAI,CAAE,cAACC,KAAD,QACJV,CAAAA,OAAO,CAAC,GAAD,CAAM,CAAN,CAAS,CACdW,QAAQ,CAAE,IADI,CAEdD,KAAK,CAAEA,KAFO,CAGdE,MAAM,CAAEhB,MAAM,CAACiB,MAAP,CAAc,KAAd,CAAqB,IAArB,CAA2B,KAA3B,CAAkC,KAAlC,CAHM,CAIdC,SAAS,CAAE,CAAC,CAAD,CAAI,EAAJ,CAAQ,EAAR,CAAY,GAAZ,CAJG,CAAT,CADH,EADc,CAAP,EADjB,CAUE,SAAS,CAAER,SAVb,iDAYG,SAACS,MAAD,QACC,qBAAC,IAAD,WACE,KAAK,CAAE,CACL,CACEC,KAAK,CAAEb,IADT,CAEEc,MAAM,CAAEd,IAAI,CAAG,IAFjB,CAGEe,cAAc,CAAE,eAHlB,CAIEC,aAAa,CAAE,KAJjB,CAKEC,OAAO,CAAE,CAACd,SAAD,EAAcC,gBAAd,CAAiC,CAAjC,CAAqC,CALhD,CADK,CAQLF,KARK,CADT,EAWMG,IAXN,mDAaGO,MAAM,CAACN,IAAP,CAAYY,GAAZ,CAAgB,SAACX,KAAD,CAAQY,KAAR,QACf,qBAAC,QAAD,CAAU,IAAV,EACE,GAAG,CAAEA,KADP,CAEE,KAAK,CAAE,CACLN,KAAK,CAAEb,IAAI,CAAG,IADT,CAELc,MAAM,CAAEd,IAAI,CAAG,IAFV,CAGLoB,YAAY,CAAGpB,IAAI,CAAG,IAAR,CAAgB,CAHzB,CAILqB,eAAe,CAAEpB,KAJZ,CAKLqB,SAAS,CAAE,CACT,CACEC,KAAK,CAAEhB,KAAK,CAACiB,WAAN,CAAkB,CACvBC,UAAU,CAAE,CAAC,CAAD,CAAI,EAAJ,CAAQ,EAAR,CAAY,GAAZ,CADW,CAEvBC,WAAW,CAAE,CAAC,GAAD,CAAM,CAAN,CAAS,GAAT,CAAc,GAAd,CAFU,CAAlB,CADT,CADS,CALN,CAFT,iDADe,EAAhB,CAbH,CADD,EAZH,CADF,CAkDD,C,kBA/D+BnC,KAAK,CAACoC,S,EAAnB7B,I,CACZH,Y,CAAeA,Y,QADHG,I","sourcesContent":["import * as React from 'react'\nimport { Animated, Easing, View } from 'react-native'\nimport { SpinnerProps, defaultProps } from './SpinnerProps'\nimport AnimationContainer from './AnimationContainer'\nimport { stagger } from './utils'\n\nexport default class Flow extends React.Component<SpinnerProps> {\n  static defaultProps = defaultProps\n\n  render() {\n    const {\n      size,\n      color,\n      style,\n      animating,\n      hidesWhenStopped,\n      ...rest\n    } = this.props\n\n    return (\n      <AnimationContainer<'flow'>\n        initAnimation={() => ({\n          flow: (value) =>\n            stagger(150, 3, {\n              duration: 1400,\n              value: value,\n              easing: Easing.bezier(0.455, 0.03, 0.515, 0.955),\n              keyframes: [0, 40, 80, 100],\n            }),\n        })}\n        animating={animating}\n      >\n        {(values) => (\n          <View\n            style={[\n              {\n                width: size,\n                height: size * 0.25,\n                justifyContent: 'space-between',\n                flexDirection: 'row',\n                opacity: !animating && hidesWhenStopped ? 0 : 1,\n              },\n              style,\n            ]}\n            {...rest}\n          >\n            {values.flow.map((value, index) => (\n              <Animated.View\n                key={index}\n                style={{\n                  width: size * 0.25,\n                  height: size * 0.25,\n                  borderRadius: (size * 0.25) / 2,\n                  backgroundColor: color,\n                  transform: [\n                    {\n                      scale: value.interpolate({\n                        inputRange: [0, 40, 80, 100],\n                        outputRange: [0.3, 1, 0.3, 0.3],\n                      }),\n                    },\n                  ],\n                }}\n              />\n            ))}\n          </View>\n        )}\n      </AnimationContainer>\n    )\n  }\n}\n"]}