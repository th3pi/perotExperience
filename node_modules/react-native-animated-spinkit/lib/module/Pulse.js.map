{"version":3,"sources":["Pulse.tsx"],"names":["React","Animated","Easing","defaultProps","AnimationContainer","anim","Pulse","props","size","color","style","animating","hidesWhenStopped","rest","pulse","value","values","animation","duration","easing","bezier","width","height","backgroundColor","borderRadius","opacity","interpolate","inputRange","outputRange","transform","scale","Component"],"mappings":"ijBAAA,MAAO,GAAKA,CAAAA,KAAZ,KAAuB,OAAvB,CACA,OAASC,QAAT,CAAmBC,MAAnB,KAAiC,cAAjC,CACA,OAAuBC,YAAvB,KAA2C,gBAA3C,CACA,MAAOC,CAAAA,kBAAP,KAA+B,sBAA/B,CACA,OAASC,IAAT,KAAqB,SAArB,C,GAEqBC,CAAAA,K,0PAGV,iBAQH,KAAKC,KARF,CAELC,IAFK,aAELA,IAFK,CAGLC,KAHK,aAGLA,KAHK,CAILC,KAJK,aAILA,KAJK,CAKLC,SALK,aAKLA,SALK,CAMLC,gBANK,aAMLA,gBANK,CAOFC,IAPE,+FAUP,MACE,qBAAC,kBAAD,EACE,aAAa,CAAE,+BAAO,CACpBC,KAAK,CAAE,eAACC,KAAD,QAAY,CACjBC,MAAM,CAAE,CAACD,KAAD,CADS,CAEjBE,SAAS,CAAEZ,IAAI,CAAC,CACda,QAAQ,CAAE,IADI,CAEdH,KAAK,CAAEA,KAFO,CAGdI,MAAM,CAAEjB,MAAM,CAACkB,MAAP,CAAc,KAAd,CAAqB,IAArB,CAA2B,KAA3B,CAAkC,KAAlC,CAHM,CAAD,CAFE,CAAZ,EADa,CAAP,EADjB,CAWE,SAAS,CAAET,SAXb,iDAaG,SAACK,MAAD,QACC,qBAAC,QAAD,CAAU,IAAV,WACE,KAAK,CAAE,CACL,CACEK,KAAK,CAAEb,IADT,CAEEc,MAAM,CAAEd,IAFV,CAGEe,eAAe,CAAEd,KAHnB,CAIEe,YAAY,CAAEhB,IAAI,CAAG,CAJvB,CAKEiB,OAAO,CACL,CAACd,SAAD,EAAcC,gBAAd,CACI,CADJ,CAEII,MAAM,CAACF,KAAP,CAAa,CAAb,EAAgBY,WAAhB,CAA4B,CAC1BC,UAAU,CAAE,CAAC,CAAD,CAAI,GAAJ,CADc,CAE1BC,WAAW,CAAE,CAAC,CAAD,CAAI,CAAJ,CAFa,CAA5B,CARR,CAYEC,SAAS,CAAE,CACT,CACEC,KAAK,CAAEd,MAAM,CAACF,KAAP,CAAa,CAAb,EAAgBY,WAAhB,CAA4B,CACjCC,UAAU,CAAE,CAAC,CAAD,CAAI,GAAJ,CADqB,CAEjCC,WAAW,CAAE,CAAC,IAAD,CAAO,CAAP,CAFoB,CAA5B,CADT,CADS,CAZb,CADK,CAsBLlB,KAtBK,CADT,EAyBMG,IAzBN,mDADD,EAbH,CADF,CA6CD,C,mBA1DgCb,KAAK,CAAC+B,S,EAApBzB,K,CACZH,Y,CAAeA,Y,QADHG,K","sourcesContent":["import * as React from 'react'\nimport { Animated, Easing } from 'react-native'\nimport { SpinnerProps, defaultProps } from './SpinnerProps'\nimport AnimationContainer from './AnimationContainer'\nimport { anim } from './utils'\n\nexport default class Pulse extends React.Component<SpinnerProps> {\n  static defaultProps = defaultProps\n\n  render() {\n    const {\n      size,\n      color,\n      style,\n      animating,\n      hidesWhenStopped,\n      ...rest\n    } = this.props\n\n    return (\n      <AnimationContainer<'pulse'>\n        initAnimation={() => ({\n          pulse: (value) => ({\n            values: [value],\n            animation: anim({\n              duration: 1200,\n              value: value,\n              easing: Easing.bezier(0.455, 0.03, 0.515, 0.955),\n            }),\n          }),\n        })}\n        animating={animating}\n      >\n        {(values) => (\n          <Animated.View\n            style={[\n              {\n                width: size,\n                height: size,\n                backgroundColor: color,\n                borderRadius: size / 2,\n                opacity:\n                  !animating && hidesWhenStopped\n                    ? 0\n                    : values.pulse[0].interpolate({\n                        inputRange: [0, 100],\n                        outputRange: [1, 0],\n                      }),\n                transform: [\n                  {\n                    scale: values.pulse[0].interpolate({\n                      inputRange: [0, 100],\n                      outputRange: [0.01, 1],\n                    }),\n                  },\n                ],\n              },\n              style,\n            ]}\n            {...rest}\n          />\n        )}\n      </AnimationContainer>\n    )\n  }\n}\n"]}