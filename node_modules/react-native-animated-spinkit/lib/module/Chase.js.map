{"version":3,"sources":["Chase.tsx"],"names":["React","Animated","Easing","defaultProps","AnimationContainer","anim","stagger","Chase","props","size","color","style","animating","hidesWhenStopped","rest","circleStyle","position","width","height","backgroundColor","borderRadius","chase","value","values","animation","duration","easing","linear","chaseDot","keyframes","chaseDotBefore","alignItems","justifyContent","opacity","transform","rotate","interpolate","inputRange","outputRange","map","index","translateY","scale","Component"],"mappings":"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","sourcesContent":["import * as React from 'react'\nimport { Animated, Easing } from 'react-native'\nimport { SpinnerProps, defaultProps } from './SpinnerProps'\nimport AnimationContainer from './AnimationContainer'\nimport { anim, stagger } from './utils'\n\nexport default class Chase extends React.Component<SpinnerProps> {\n  static defaultProps = defaultProps\n\n  render() {\n    const {\n      size,\n      color,\n      style,\n      animating,\n      hidesWhenStopped,\n      ...rest\n    } = this.props\n    const circleStyle = {\n      position: 'absolute',\n      width: size / 4,\n      height: size / 4,\n      backgroundColor: color,\n      borderRadius: size / 8,\n    }\n\n    return (\n      <AnimationContainer<'chase' | 'chaseDot' | 'chaseDotBefore'>\n        initAnimation={() => ({\n          chase: (value) => ({\n            values: [value],\n            animation: anim({\n              duration: 2500,\n              easing: Easing.linear,\n              value: value,\n            }),\n          }),\n          chaseDot: (value) =>\n            stagger(100, 6, {\n              duration: 2000,\n              value: value,\n              keyframes: [0, 80, 100],\n            }),\n          chaseDotBefore: (value) =>\n            stagger(100, 6, {\n              duration: 2000,\n              value: value,\n              keyframes: [0, 50, 100],\n            }),\n        })}\n        animating={animating}\n      >\n        {(values) => (\n          <Animated.View\n            style={[\n              {\n                width: size,\n                height: size,\n                alignItems: 'center',\n                justifyContent: 'center',\n                opacity: !animating && hidesWhenStopped ? 0 : 1,\n                transform: [\n                  {\n                    rotate: values.chase[0].interpolate({\n                      inputRange: [0, 100],\n                      outputRange: ['0deg', '360deg'],\n                    }),\n                  },\n                ],\n              },\n              style,\n            ]}\n            {...rest}\n          >\n            {values.chaseDot.map((value, index) => (\n              <Animated.View\n                key={index}\n                style={[\n                  circleStyle,\n                  {\n                    transform: [\n                      {\n                        rotate: value.interpolate({\n                          inputRange: [0, 80, 100],\n                          outputRange: ['0deg', '360deg', '360deg'],\n                        }),\n                      },\n                      { translateY: -size / 2 + size / 8 },\n                      {\n                        scale: values.chaseDotBefore[index].interpolate({\n                          inputRange: [0, 50, 100],\n                          outputRange: [1, 0.4, 1],\n                        }),\n                      },\n                    ],\n                  },\n                ]}\n              />\n            ))}\n          </Animated.View>\n        )}\n      </AnimationContainer>\n    )\n  }\n}\n"]}