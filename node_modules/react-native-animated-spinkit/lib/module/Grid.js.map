{"version":3,"sources":["Grid.tsx"],"names":["React","Animated","View","defaultProps","AnimationContainer","stagger","values","Grid","props","size","color","style","animating","hidesWhenStopped","rest","grid","value","duration","keyframes","interpolations","width","height","flexWrap","flexDirection","opacity","map","index","backgroundColor","transform","scale","interpolate","inputRange","outputRange","Component"],"mappings":"gjBAAA,MAAO,GAAKA,CAAAA,KAAZ,KAAuB,OAAvB,CACA,OAASC,QAAT,CAAmBC,IAAnB,KAA+B,cAA/B,CACA,OAAuBC,YAAvB,KAA2C,gBAA3C,CACA,MAAOC,CAAAA,kBAAP,KAA+B,sBAA/B,CACA,OAASC,OAAT,KAAwB,SAAxB,CAEA,GAAMC,CAAAA,MAAM,CAAG,CAAC,CAAD,CAAI,CAAJ,CAAO,CAAP,CAAU,CAAV,CAAa,CAAb,CAAgB,CAAhB,CAAmB,CAAnB,CAAsB,CAAtB,CAAyB,CAAzB,CAAf,C,GACqBC,CAAAA,I,qPAGV,iBAQH,KAAKC,KARF,CAELC,IAFK,aAELA,IAFK,CAGLC,KAHK,aAGLA,KAHK,CAILC,KAJK,aAILA,KAJK,CAKLC,SALK,aAKLA,SALK,CAMLC,gBANK,aAMLA,gBANK,CAOFC,IAPE,+FAUP,MACE,qBAAC,kBAAD,EACE,aAAa,CAAE,+BAAO,CACpBC,IAAI,CAAE,cAACC,KAAD,QACJX,CAAAA,OAAO,CAAC,GAAD,CAAM,CAAN,CAAS,CACdY,QAAQ,CAAE,IADI,CAEdD,KAAK,CAAEA,KAFO,CAGdE,SAAS,CAAE,CAAC,CAAD,CAAI,EAAJ,CAAQ,EAAR,CAAY,GAAZ,CAHG,CAAT,CADH,EADc,CAAP,EADjB,CASE,SAAS,CAAEN,SATb,iDAWG,SAACO,cAAD,QACC,qBAAC,IAAD,WACE,KAAK,CAAE,CACL,CACEC,KAAK,CAAEX,IADT,CAEEY,MAAM,CAAEZ,IAFV,CAGEa,QAAQ,CAAE,MAHZ,CAIEC,aAAa,CAAE,KAJjB,CAKEC,OAAO,CAAE,CAACZ,SAAD,EAAcC,gBAAd,CAAiC,CAAjC,CAAqC,CALhD,CADK,CAQLF,KARK,CADT,EAWMG,IAXN,mDAaGR,MAAM,CACJmB,GADF,CACM,SAACT,KAAD,QAAWG,CAAAA,cAAc,CAACJ,IAAf,CAAoBC,KAApB,CAAX,EADN,EAEES,GAFF,CAEM,SAACT,KAAD,CAAQU,KAAR,QACH,qBAAC,QAAD,CAAU,IAAV,EACE,GAAG,CAAEA,KADP,CAEE,KAAK,CAAE,CACLN,KAAK,CAAEX,IAAI,CAAG,CADT,CAELY,MAAM,CAAEZ,IAAI,CAAG,CAFV,CAGLkB,eAAe,CAAEjB,KAHZ,CAILkB,SAAS,CAAE,CACT,CACEC,KAAK,CAAEb,KAAK,CAACc,WAAN,CAAkB,CACvBC,UAAU,CAAE,CAAC,CAAD,CAAI,EAAJ,CAAQ,EAAR,CAAY,GAAZ,CADW,CAEvBC,WAAW,CAAE,CAAC,CAAD,CAAI,IAAJ,CAAU,CAAV,CAAa,CAAb,CAFU,CAAlB,CADT,CADS,CAJN,CAFT,iDADG,EAFN,CAbH,CADD,EAXH,CADF,CAkDD,C,kBA/D+BhC,KAAK,CAACiC,S,EAAnB1B,I,CACZJ,Y,CAAeA,Y,QADHI,I","sourcesContent":["import * as React from 'react'\nimport { Animated, View } from 'react-native'\nimport { SpinnerProps, defaultProps } from './SpinnerProps'\nimport AnimationContainer from './AnimationContainer'\nimport { stagger } from './utils'\n\nconst values = [2, 3, 4, 1, 2, 3, 0, 1, 2]\nexport default class Grid extends React.Component<SpinnerProps> {\n  static defaultProps = defaultProps\n\n  render() {\n    const {\n      size,\n      color,\n      style,\n      animating,\n      hidesWhenStopped,\n      ...rest\n    } = this.props\n\n    return (\n      <AnimationContainer<'grid'>\n        initAnimation={() => ({\n          grid: (value) =>\n            stagger(100, 5, {\n              duration: 1300,\n              value: value,\n              keyframes: [0, 35, 70, 100],\n            }),\n        })}\n        animating={animating}\n      >\n        {(interpolations) => (\n          <View\n            style={[\n              {\n                width: size,\n                height: size,\n                flexWrap: 'wrap',\n                flexDirection: 'row',\n                opacity: !animating && hidesWhenStopped ? 0 : 1,\n              },\n              style,\n            ]}\n            {...rest}\n          >\n            {values\n              .map((value) => interpolations.grid[value])\n              .map((value, index) => (\n                <Animated.View\n                  key={index}\n                  style={{\n                    width: size / 3,\n                    height: size / 3,\n                    backgroundColor: color,\n                    transform: [\n                      {\n                        scale: value.interpolate({\n                          inputRange: [0, 35, 70, 100],\n                          outputRange: [1, 0.01, 1, 1],\n                        }),\n                      },\n                    ],\n                  }}\n                />\n              ))}\n          </View>\n        )}\n      </AnimationContainer>\n    )\n  }\n}\n"]}